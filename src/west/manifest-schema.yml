$schema: "https://json-schema.org/draft/2020-12/schema"
$id: "https://zephyrproject.org/schemas/west/manifest"
title: West Manifest
description: |
  TODO

type: object
properties:
  # The "version" key is optional. It's the minimum version manifest
  # schema that is required to correctly parse the manifest data.
  version:
    type: string

  # The "defaults" key specifies some default values used in the
  # rest of the manifest.
  defaults:
    type: object
    properties:
      # The name of the default remote.
      remote:
        type: string
      # The default revision (master if not given).
      revision:
        type: string

  # The "remotes" key specifies a sequence of remotes, each of which has a name
  # and a fetch URL base. These URL bases are concatenated with project names
  # (separated by a /) to form complete fetch URLs.
  remotes:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        url-base:
          type: string

  # The "projects" key specifies a sequence of "projects", each of which has a
  # remote, and may specify additional configuration.
  #
  # A manifest without projects was forbidden up through west 0.9.x,
  # but it can be convenient to create such manifests at times, so it
  # is now allowed.
  projects:
    type: array
    items:
      type: object
      required: [name]
      #additionalProperties: False
      properties:
        # Project's unique name.
        name:
          type: string
        # Project description. Has no effect.
        description:
          type: string
        # Name of the project's remote. May not be combined with "url".
        remote:
          type: string
        # If a remote is given, the project is fetched from this URL:
        #
        # remote.url-base + / + repo-path
        #
        # "repo-path" defaults to "name".
        repo-path:
          type: string
        # Explicit project fetch URL. May not be combined with "remote".
        url:
          type: string
        # Revision to check out. May be a branch, tag, or SHA.
        revision:
          type: string
          # TODO: check oneOf string vs number?

        # Path to check out, relative to the west installation root.
        # The default is the name.
        path:
          type: string
        # Submodules to checkout within the project
        submodules:
          oneOf:
            - type: boolean
            - type: array
              items:
                type: object
                required: [path]
                properties:
                  path:
                    type: string
                  name:
                    type: string
        # Limits the clone depth of the project if given.
        clone-depth:
          type: integer
          minimum: 1

        # Path to a west-commands.yml inside the project.
        west-commands:
          type: string
        # Additional manifest data to import from the project.
        import:
          oneOf:
            - type: boolean
            - type: string
            - type: object
              properties:
                name-allowlist:
                  type: array
                  items:
                    type: string
                path-allowlist:
                  type: array
                  items:
                    type: string
                name-blocklist:
                  type: array
                  items:
                    type: string
                path-blocklist:
                  type: array
                  items:
                    type: string
        groups:
          $ref: "#/$defs/groups"
        # userdata:
        #   type: {}

  # If present, a list of project groups to enable and disable. Prefix
  # a group name with "-" to disable it; prefix with "+" to enable it.
  group-filter:
    $ref: "#/$defs/groups"

  # The "self" key specifies values for the project containing the manifest
  # file (the "manifest repository").
  self:
    type: object
    properties:
      path:
        type: string
      # The manifest repository may also contain additional west
      # commands. See the above comment for details.
      west-commands:
        type: string
      # TODO:
      # Additional manifest data to import from the manifest
      # repository.
      # import:
      #   required: false
      #   type: any
      # # Arbitrary user data for manifest repository
      # userdata:
      #   required: false
      #   type: any

$defs:
  groups:
    type: array
    items:
      oneOf:
        - type: string
        - type: number
